# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: 42 Norminette
        uses: alexandregv/norminette-action@v3
        with:
          flags: '*.c *.h'
      - name: make address
        run: make -C ./unit_tests address && ./unit_tests/unit_test
      - name: make leak
        run: make -C ./unit_tests leak && ./unit_tests/unit_test
      - name: Checkout libft-unit-test
        uses: actions/checkout@v2
        with:
          repository: alelievr/libft-unit-test
          path: libft-unit-test
      - name: run libft-unit-test
        run: sed -i "s/libft//" libft-unit-test/Makefile && make -C ./libft-unit-test
             && ! ./libft-unit-test/run_test | grep -e "KO" -e "FAILED" -e "CRASH" -e "TIMEOUT" -e "MISSING"
